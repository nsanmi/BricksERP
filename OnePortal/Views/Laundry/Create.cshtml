@using HRM.DAL.Models;
@using HRM.DAL.Util;
@using HRM.DAL.Service;
@{
    ViewBag.Title = "Create";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Add Customer And Make Clothe Entry</h2>
        <ol class="breadcrumb">

            <li>
                <a href="@Url.Action("Noticeboard","Admin")">NoticeBoard</a>

            </li>
            <li>
                <a href="@Url.Action("Index","Laundry")">Manage Laundry</a>
            </li>
            <li class="active">
                <strong>Add Customer And Make Clothe Entry</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>


<div class="wrapper wrapper-content  animated fadeInRight">
    <div class="row">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-title">
                        <h5>Customer Information</h5>

                    </div>
                    <div class="ibox-content">
                        <div class="row">
                            @*<div class="form-group col-lg-6">
                                    <label>Customer Type</label>
                                    @Html.DropDownList("customer_type", new SelectList(OptionUtil.GetLookupOptions("customer_type"), "id", "lookup_name", null), "- Please Select -", new { @class = "form-control", @id = "mem" })
                                </div>*@

                            <div class="form-group col-lg-6">
                                <label>Customer Type</label>
                                <select class="form-control" id="customer_type">
                                    <option>Please-select</option>
                                    <option value="0">Hotel Guest</option>
                                    <option value="1">New Customer</option>
                                    <option value="2">Workers</option>
                                </select>
                            </div>

                            <div class="form-group col-lg-6" style="display:none;" id="guest">
                                <label>Select Guest</label>
                                @Html.DropDownList("guest", new SelectList(OptionUtil.GetGuestsOptions(), "GuestID", "FirstName", null), "- Please Select -", new { @class = "form-control" })
                            </div>

                            <div class="form-group col-lg-6" style="display:none;" id="worker">
                                <label>Select Worker</label>
                                @Html.DropDownList("employee", new SelectList(OptionUtil.GetEmpOptions(), "emp_number", "emp_firstname", null), "- Please Select -", new { @class = "form-control" })
                            </div>


                            @*<div class="form-group col-lg-6">
                                    <label>Select Guest</label>
                                    @Html.DropDownList("guest", new SelectList(OptionUtil.GetGuestsOptions(), "GuestID", "FirstName", null), "- Please Select -", new { @class = "form-control" })
                                </div>*@

                        </div>

                        <div class="row" id="guestdemo" style="display:none;">
                            @if (ViewBag.message != null)
                            {
                                <div class="alert alert-info alert-dismissable">
                                    <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                                    @ViewBag.message
                                </div>
                            }
                            <div class="form-group col-lg-6"><label>First name</label> <input type="text" required value="" name="FirstName" class="form-control"></div>
                            <div class="form-group col-lg-6"><label>Last name</label> <input type="text" value="" name="LastName" required class="form-control"></div>
                            <div class="form-group col-lg-6"><label>Email</label> <input type="text" value="" name="email" class="form-control"></div>
                            <div class="form-group col-lg-6"><label>Address</label> <input type="text" value="" name="address" class="form-control"></div>
                            <div class="form-group col-lg-6"><label>Phone</label> <input type="text" value="" name="phone" class="form-control"></div>

                            <div class="form-group col-lg-6">
                                <label>Gender</label>

                                @Html.DropDownList("emp_gender", new SelectList(OptionUtil.GetLookupOptions("gender"), "id", "lookup_name", null), "- Please Select -", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-title">
                        <h5>Clothe Information</h5>
                    </div>
                    <div class="ibox-content">
                        <div class="row">
                            <div class="form-group col-lg-6" id="data_1">
                                <label>Entry/Collection Date</label>
                                <div class="input-group date">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    @*<input id="expected_start_date" name="expected_start_date" type="text" readonly class="form-control">*@
                                    <input type="text" readonly value="" name="joined_date" class="form-control">
                                </div>
                            </div>
                            <div class="form-group col-lg-6" id="data_1">
                                <label>Delivery date</label>
                                <div class="input-group date">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    @*<input id="expected_start_date" name="expected_start_date" type="text" readonly class="form-control">*@
                                    <input type="text" readonly value="" name="probation_end_date" class="form-control">
                                </div>
                            </div>




                            <div class="form-group">


                                <table class="table table-bordered" id="tb_items">
                                    <thead>
                                        <tr>
                                            <th style="background-color:transparent">Clothe Type</th>
                                            <th style="background-color:transparent">Quantity</th>
                                            <th style="background-color:transparent" width="15%">Amount</th>
                                            @*<th style="background-color:transparent" width="15%">Value 3</th>*@

                                            @*<th style="background-color:transparent">Specification</th>
        <th style="background-color:transparent">Unit Cost</th>*@
                                            <th style="background-color:transparent" width="10%">Total</th>
                                            <th style="background-color:transparent"><button type="button" class="btn btn-sm btn-primary" onclick="add_row('tb_items')">Add Row</button></th>
                                        </tr>
                                    </thead>
                                    <tbody>


                                        <tr class="txtMult">
                                            <td class="col-sm-3">
                                                @*<input type="text" name="name" class="form-control" />*@
                                                @Html.DropDownList("clothe_type_id", new SelectList(OptionUtil.GetPricingOptions(), "id", "clotheType", null), "- Please Select -", new { @class = "form-control", @required = "required" })

                                            </td>
                                            <td><input class="form-control number allownumericwithdecimal val2" type="text" required onpaste="return false" name="quantity" value="" /></td>
                                            @*<td><input class="form-control number val1 allownumericwithdecimal" type="text" required onpaste="return false" name="unit" value="" /></td>*@


                                            @*<td><input class="form-control" type="text" required name="itemname" value="" /></td>*@

                                            @*<td><textarea class="form-control" required name="description"></textarea></td>*@

                                            <td><input class="form-control number val3 allownumericwithdecimal" type="text" required onpaste="return false" name="unit_cost" value="" /></td>
                                            <td><span class="multTotal">0.00</span></td>
                                            <td><button class="btn btn-sm btn-danger" type="button" onclick="delete_row(this,'tb_items')"><i class="fa fa-trash"></i></button></td>
                                        </tr>

                                        @*<tr class="txtMult">
                        <td><input class="form-control number allownumericwithdecimal val1" required type="text" name="unit" onpaste="return false" /></td>
                        <td><input class="form-control number allownumericwithdecimal val2" required type="text" name="quantity" onpaste="return false" /></td>
                        <td>
                            <input class="form-control" required type="text" name="itemname" />
                            <select id="e6" class="form-control iselect" name="itemname"></select>
                        </td>
                        <td><textarea class="form-control" required name="description"></textarea></td>
                        <td><input class="form-control number allownumericwithdecimal val3" required type="text" name="unit_cost" onpaste="return false" /></td>
                        <td><span class="multTotal">0.00</span></td>
                        <td><button class="btn btn-sm btn-danger" type="button" onclick="delete_row(this,'tb_items')"><i class="fa fa-trash"></i></button></td>
                    </tr>*@

                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="3">Total</td>
                                            <td id="grandTotal" colspan="2">0.00</td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>





                            @*<table id="myTable" class=" table order-list">
        <thead>
            <tr>
                <td><strong>Clothe Type</strong></td>
                <td><strong>Quantity</strong></td>
                <td><strong>Amount</strong></td>

            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="col-sm-3">*@
                            @*<input type="text" name="name" class="form-control" />*@
                            @*@Html.DropDownList("clothe_type_id", new SelectList(OptionUtil.GetPricingOptions(), "id", "clotheType", null), "- Please Select -", new { @class = "form-control", @required = "required" })

                    </td>
                    <td class="col-sm-3 form-d">
                        <input type="number" value="" id="cal" name="quantity" class="form-control prc">
                    </td>
                    <td class="col-sm-3 form-c">
                        <input type="number" value="" name="price" class="form-control pm">
                    </td>
                    <td class="col-sm-3 " style="text-align: left;">
                        <input type="button" class="btn-primary btn btn-md " id="addrow" value="Add Row" />
                    </td>
                    <td class="col-sm-2">
                        <a class="deleteRow"></a>
                    </td>
                </tr>
            </tbody>



            <thead>
                <tr>
                    <td><strong></strong></td>
                    <td><strong>Total Quantity</strong></td>
                    <td><strong>Total Price</strong></td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="col-sm-4 form-c"></td>

                    <td class="col-sm-4 form-c">
                        <output id="qresult"></output>
                    </td>
                    <td class="col-sm-4 form-c">
                        <output id="presult"></output>
                    </td>
                </tr>
                <tr></tr>
            </tbody>

            <thead>
                <tr>
                    <td>
                        <strong>AMOUNT SUM TOTAL</strong>
                        <output id="tresult"></output>
                    </td>

                </tr>
            </thead>
            <tbody>
                <tr>

                    <td class="col-sm-4 form-c">
                        <output id="result"></output>
                    </td>
                </tr>

            </tbody>

        </table>*@


                            <div class="form-group col-lg-6">
                                <label>Location</label>
                                @Html.DropDownList("location_id", new SelectList(OptionUtil.GetLocations(), "id", "name", null), "- Please Select -", new { @class = "form-control", @required = "required" })
                            </div>
                            <div class="form-group col-lg-6">
                                <label>Employee to manage clothe</label>
                                <select id="e6" name="supervisor" required></select>
                            </div>




                        </div>
                    </div>
                </div>
            </div>


            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-lg-12">
                                <button class="btn btn-md btn-primary pull-right m-t-n-xs" type="submit">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts{
    <script>
        $(document).ready(function () {


        })
    </script>

    <script src="~/Content/libs/datapicker/bootstrap-datepicker.js"></script>
    <script src="~/Content/libs/iCheck/icheck.min.js"></script>
    <script src="~/Scripts/custom_fns/base.js"></script>
    <script src="~/Scripts/custom_fns/file_manager.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#customer_type').on('change', function () {
                if (this.value == '1')
                //.....................^.......
                {
                    $("#guestdemo").show(1000);
                }

                else {
                    $("#guestdemo").hide(1000);
                }
            });

            $('#customer_type').on('change', function () {
                if (this.value == '0') {
                    $("#guest").show(1000);
                }

                else {
                    $("#guest").hide(1000);
                }
            });

            $('#customer_type').on('change', function () {
                if (this.value == '2') {
                    $("#worker").show(1000);
                }

                else {
                    $("#worker").hide(1000);
                }
            });

            //$('#customer_type').on('change', function () {
            //    if (this.value == '1')
            //    //.....................^.......
            //    {
            //        $("#guestdemo").show();
            //    }
            //    else if (this.value == '0') {
            //        $("#guest").show();
            //    }
            //    else if (this.value == '2') {
            //        $("#worker").show();
            //    }
            //    else {
            //        $("#guestdemo").hide();
            //    }
            //});
        });




        $(document).ready(function () {

            $("#frm_img").submit(function () {

                var formData = new FormData($(this)[0]);


                $.ajax({
                    url: '/api/employeeapi/UploadImg',
                    type: 'POST',
                    data: formData,
                    async: true,
                    success: function (data) {
                        window.location.reload(true);
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });


                return false;
            });



            $('#e6').select2({
                placeholder: 'Search for a user',

                ajax: {
                    url: function (params) {
                        return baseUrl() + "employeeapi/getsearch/" + params.term;
                    },
                    dataType: 'json',
                    quietMillis: 100,

                    processResults: function (data) {
                        return {
                            results: $.map(data, function (obj) {
                                return { id: obj.id, text: obj.name };
                            })
                        };
                    }

                }
            });



            $('#t_about').keypress(function (e) {
                if (e.which == 13) {
                    $('#emp_about').val($('#t_about').val());
                    $('#btn_submit').click();
                }
            });

            $('#t_about').keyup(function () {
                var max = 140;
                var len = $(this).val().length;
                if (len >= max) {
                    $(this).val($(this).val().substr(0, max));

                }
            });


            $('#img').change(function () {
                $('#frm_img').submit();
            });

            $('#data_1 .input-group.date').datepicker({
                format: 'yyyy-mm-dd',
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green'
            });



        });

        $(document).ready(function () {
            $("#hide").click(function () {
                $("guestdemo").hide();
            });
            $("#show").click(function () {
                $("guestdemo").show();
            });
        });

        $(document).ready(function () {

            // $('.form-d', '.form-c').on('input', '.prc', '.pm', function () {

            $(".form-d , .form-c").on('input', ".prc, pm", function () {

                var totalQuan = 0;
                var totalPrice = 0;
                var res = 0;
                var total = 0;


                $('.form-d .prc').each(function () {
                    var inputVal = $(this).val();
                    if ($.isNumeric(inputVal)) {
                        totalQuan += parseFloat(inputVal);

                    }

                });

                $('.form-c .pm').each(function () {
                    var inputVal2 = $(this).val();
                    if ($.isNumeric(inputVal2)) {
                        res = inputVal * inputVal2;
                        total += parseFloat(res);
                        totalPrice += parseFloat(inputVal);

                    }

                });


                $('#qresult').text(totalQuan);
                $('#presult').text(totalPrice);
                $('#tresult').text(total);
            });

        });
        //function add_row(tb) {
        //    var $tableBody = $('#' + tb).find("tbody"),
        //        //$trLast = $tableBody.find("tr:last"),
        //        trLast = $tableBody.find("tr:last"),
        //        $trNew = $trLast.clone();

        //    var row_count = $trLast.index() + 1;
        //    $trNew.find('input,select').each(function () {
        //        var name = this.name;
        //        this.name = name.substring(0, name.length - 1) + (row_count + 1);


        //        var id = this.id;
        //        this.id = id.substring(0, name.length - 1) + (row_count + 1);

        //    });

        //    //reset the project selection
        //    $trNew.find('select').each(function () {

        //        this.selectedIndex = 0;

        //    });
        //    //disable activity dropdown
        //    $trNew.find('select')[1].disabled = true;

        //    $trNew.find('button').each(function () {

        //        if ($(this).hasClass("eligible")) {
        //            $(this).removeClass("btn-warning");
        //        }


        //    });


        //    $trNew.find('input').each(function () {

        //        $(this).val("");
        //        $(this).attr("disabled", "disabled");
        //    });

        //    $trLast.after($trNew);


        //}


        //function clear_row(row) {
        //    $(row).parent().parent().find("input").each(function () {
        //        $(this).val("");
        //    });

        //    $trNew.find('button').each(function () {

        //        if ($(this).has("eligible")) {
        //            $(this).removeClass("btn-warning");
        //        }


        //    });

        //    $(row).parent().parent().find("select").each(function () {
        //        this.selectedIndex = 0;
        //    });
        //    $(row).parent().parent().find("select")[1].disabled = true;
        //}

        //function delete_row(row, tb) {
        //    var rows = $("#" + tb + " tbody tr").length;
        //    if (rows > 1) {
        //        $(row).parent().parent().remove();
        //    } else {
        //        clear_row(row);
        //    }
        //}





        $(document).ready(function () {
            var counter = 0;

            $("#addrow").on("click", function () {
                var newRow = $("<tr>");
                var cols = "";

                //cols += '<td><input type="text" class="form-control" name="name' + counter + '"/></td>';
                cols += ' <select class="form-control col-sm-4" name="name"></select>';
                //cols += '<td class="col-sm-4 form-d">< input type = "number" class="form-control prc" name="quantity' + counter + '" /></td >';

                cols += '<td class="col-sm-4 form-d"><input type="number" class="form-control prc" name="quantity' + counter + '"/></td>';
                cols += '<td class="form-c"><input type="number" class="form-control pm" name="price' + counter + '"/></td>';

                cols += '<td><input type="button" class="ibtnDel btn btn-md btn-danger "  value="Delete"></td>';
                newRow.append(cols);
                $("table.order-list").append(newRow);
                counter++;
            });



            $("table.order-list").on("click", ".ibtnDel", function (event) {
                $(this).closest("tr").remove();
                counter -= 1
            });


        });



        function calculateRow(row) {
            var price = +row.find('input[name^="price"]').val();

        }


        function calculateGrandTotal() {
            var grandTotal = 0;
            $("table.order-list").find('input[name^="price"]').each(function () {
                grandTotal += +$(this).val();
            });
            $("#grandtotal").text(grandTotal.toFixed(2));
        }

        //function multiply(val1, control, output_control) {
        //    var result = val1 * $(control).val();

        //    $("#" + output_control).val(result);
        //}

        //function multiply(val1, val2, control, output_control) {
        //    var result = val1 * val2 * $(control).val();

        //    $("#" + output_control).val(result);
        //}

    </script>

    <script src="~/Content/libs/iCheck/icheck.min.js"></script>
    <script src="~/Scripts/custom_fns/base.js"></script>
    <script src="~/Scripts/custom_fns/workflow.js"></script>
    <script src="~/Content/libs/summernote/summernote.min.js"></script>
    <script src="~/Content/libs/datapicker/bootstrap-datepicker.js"></script>
    <script src="~/Content/libs/dataTables/datatables.min.js"></script>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Content/libs/file-input/fileinput.min.js"></script>
    <script src="~/Content/libs/file-input/themes/explorer-fa/theme.js" type="text/javascript"></script>
    <script src="~/Content/libs/file-input/themes/fa/theme.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" type="text/javascript"></script>
    <script src="~/Content/libs/jasny/jasny-bootstrap.min.js"></script>

    <script>
        $(".txtMult input").keyup(multInputs);
        $(".txtMult_n input").keyup(multInputs_n);
        $(".txtMult_r input").keyup(multInputs_r);

        function multInputs() {
            var mult = 0;
            // for each row:
            $("tr.txtMult").each(function () {
                var $val3 = 1;
                // get the values from this row:
                //var $val1 = $('.val1', this).val();
                var $val2 = $('.val2', this).val();
                if ($('.val3', this).length) {
                    $val3 = $('.val3', this).val();
                }
                var $total = 0;
                if ($val2 !== undefined && $val3 !== undefined)
                    $total = ($val2 * 1) * ($val3 * 1);
                // set total for the row
                $('.multTotal', this).text(numberWithCommas($total));
                mult += $total;
            });
            $("#grandTotal").text(numberWithCommas(mult));
        }

        $(document).ready(function () {
            $('.summernote').summernote({
            });

            $("#file-0b").fileinput({
                'theme': 'explorer-fa',
                browseClass: "btn btn-primary btn-xs",
                fileType: "any",
                'mainClass': "input-group-lg"
            });

            //Hide the rejection input
            $("#rejection_step").hide();
        });

        $('#data_1 .input-group.date').datepicker({
            format: 'yyyy-mm-dd',
            todayBtn: "linked",
            keyboardNavigation: false,
            forceParse: false,
            calendarWeeks: true,
            autoclose: true
        });

        var dateToday = new Date();
        //var reqDate
        $('#data_2 .input-group.date').datepicker({
            format: 'yyyy-mm-dd',
            todayBtn: "linked",
            keyboardNavigation: false,
            forceParse: false,
            calendarWeeks: true,
            autoclose: true,
            minDate: dateToday,
            daysOfWeekDisabled: [0, 6]
        });

        $(".txtMult_n input").keyup(multInputs_n);

        function multInputs_n() {
            var mult = 0;
            // for each row:
            $("tr.txtMult_n").each(function () {
                var $val3 = 1;
                // get the values from this row:
                //var $val1 = $('.val1', this).val();
                var $val2 = $('.val2', this).val();
                if ($('.val3', this).length) {
                    $val3 = $('.val3', this).val();
                }

                var $total = ($val2 * 1) * ($val3 * 1);
                // set total for the row
                $('.multTotal', this).text(numberWithCommas($total));
                mult += $total;
            });
            $("#grandTotal").text(numberWithCommas(mult));
        }

        function multInputs_r() {
            var mult = 0;
            // for each row:
            $("tr.txtMult_r").each(function () {
                var $val3 = 1;
                // get the values from this row:
                var $val1 = $('.val1', this).val();

                var $total = ($val1 * 1);
                // set total for the row
                $('.multTotal', this).text(numberWithCommas($total));
                mult += $total;
            });
            $("#grandTotal").text(numberWithCommas(mult));
        }

        function numberWithCommas(number) {
            var parts = number.toString().split(".");
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return parts.join(".");
        }

        $(function () {
            $('.number').keypress(function (e) {
                if (e.which === 97 ||
                    e.which === 98 ||
                    e.which === 99 ||
                    e.which === 110 ||
                    e.which === 111 ||
                    e.which === 65 ||
                    e.which === 66 ||
                    e.which === 67 ||
                    e.which === 78 ||
                    e.which === 79 ||
                    e.which === 49 ||
                    e.which === 50 ||
                    e.which === 51 ||
                    e.which === 52 ||
                    e.which === 53 ||
                    e.which === 48 ||
                    e.which === 54 ||
                    e.which === 55 ||
                    e.which === 56 ||
                    e.which === 57) {
                    return true;
                } else {
                    return false;
                }
            });
        });

        $('#vendors').select2({ placeholder: "Search vendors" });

        /*
         * Edited by Johnbosco
         * added functionality to search vendors by category
         */
        $('#vendors_n').select2({
            placeholder: 'Search Vendors...',
            //dropdownParent: $("#myModal"),
            ajax: {
                url: function (params) {
                    if ($("#category").val() !== undefined && $("#category").val() !== null && $("#category").val() !== "")
                        return baseUrl() + "utils/GetVendorsByCategory?category=" + $("#category").val();
                },
                dataType: 'json',
                quietMillis: 100,
                processResults: function (data) {
                    return {
                        results: $.map(data,
                            function (obj) {
                                return { id: obj.id, text: obj.name };
                            })
                    };
                }
            }
        });


        $('.iselect').select2({
            placeholder: 'Search for an item',

            ajax: {
                url: function (params) {
                    return baseUrl() + "utils/GetItems/" + params.term;
                },
                dataType: 'json',
                quietMillis: 100,

                processResults: function (data) {
                    return {
                        results: $.map(data,
                            function (obj) {
                                return { id: obj.id, text: obj.name };
                            })
                    };
                }

            }
        });


        $(".allownumericwithdecimal").on("keypress keyup blur",
            function (event) {
                //this.value = this.value.replace(/[^0-9\.]/g,'');
                $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
                if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                    event.preventDefault();
                }
            });

        $(".allownumericwithoutdecimal").on("keypress keyup blur",
            function (event) {
                $(this).val($(this).val().replace(/[^\d].+/, ""));
                if ((event.which < 48 || event.which > 57)) {
                    event.preventDefault();
                }
            });

        function checkForm() {
            var form = $('#process_form');
            form.validate();
            if (form.valid()) {
                $("#btn_submit").hide();
            }


        }

        function toggleRejection(control) {
            if (control.value === "rejected")
                $("#rejection_step").show(350);
            else
                $("#rejection_step").hide(350);
        }

    </script>


}



@section styles{
    <link href="~/Content/libs/datapicker/datepicker3.css" rel="stylesheet">
    <link href="~/Content/libs/iCheck/custom.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet" />

    <style>
        .select2-close-mask {
            z-index: 2099;
        }

        .select2-dropdown {
            z-index: 3051;
        }

        .select2 {
            width: 100% !important;
        }
    </style>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet" />
    <link href="~/Content/libs/summernote/summernote.css" rel="stylesheet" />
    <link href="~/Content/libs/summernote/summernote-bs3.css" rel="stylesheet" />
    <link href="~/Content/libs/datapicker/datepicker3.css" rel="stylesheet">
    <link href="~/Content/libs/file-input/fileinput.min.css" media="all" rel="stylesheet" />
    <link href="~/Content/libs/file-input/themes/explorer-fa/theme.css" media="all" rel="stylesheet" type="text/css" />
    <link href="~/Content/libs/jasny/jasny-bootstrap.min.css" rel="stylesheet" type="text/css" />


}



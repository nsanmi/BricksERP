@using WorkFlow.DAL.Data
@using System.Xml.Linq;
@using WorkFlow.DAL;
@{
    var workflow = (bpm_workflow)ViewBag.workflow;
    var definition = XElement.Parse(workflow.workflow);
    var form = XElement.Parse(workflow.workflow).Element("form");

    var vendors = definition.Element("vendors").Elements("vendor");
    var vendor_ids = new List<int>();
    foreach(var vendor in vendors)
    {
        vendor_ids.Add(Convert.ToInt32(vendor.Element("id").Value));
    }
}
<div class="form-group">
    <div class="table-responsive">
        <table class="table table-bordered" id="tb_items">
            <thead>
                <tr>
                    <th style="background-color:transparent">Unit</th>
                    <th style="background-color:transparent">Quantity</th>
                    @*<th style="background-color:transparent">Item</th>*@
                    <th style="background-color:transparent">Description</th>
                    @if (definition.Element("vendors").Elements("vendor").Any())
                    {
                        foreach (var vendor in definition.Element("vendors").Elements("vendor"))
                        {
                            <th style="background-color:transparent">
                                @vendor.Element("name").Value - Unit Cost
                            </th>
                            <th style="background-color:transparent">
                                Delivery date
                            </th>
                        }
                    }
                </tr>
            </thead>
            <tbody>
                @if (form.Element("items").Elements("item").Any())
                {
                    foreach (var item in form.Element("items").Elements("item"))
                    {
                        <tr>
                            <td>@item.Element("unit").Value</td>
                            <td>@item.Element("quantity").Value</td>
                            @*<td>@item.Element("itemname").Value</td>*@
                            <td>@item.Element("description").Value</td>
                            @*
                                Modified by Johnbosco to include unit_price display and readonly
                            *@
                            @if (definition.Element("vendors") != null && definition.Element("vendors").Elements("vendor").Any())
                            {
                                foreach (var vendor in definition.Element("vendors").Elements("vendor"))
                                {
                                    <td><input name="@string.Format("{0}_{1}",vendor.Element("id").Value,item.Attribute("id").Value)"
                                               required type="text" class="form-control" value="@(item.Element("vendors_unit_price")?.Value)"
                                               placeholder="Enter vendor's unit cost" /></td>
                                    <td><input name="@string.Format("{0}_{1}_{2}",vendor.Element("id").Value,item.Attribute("id").Value, "delivery")"
                                               required type="date" class="form-control" value="@(item.Element("delivery_date")?.Value)"
                                               placeholder="Enter vendor's delivery date" /></td>
                                }
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<div class="form-group">
    <label>Attachments</label>
    <table class="table table-bordered" id="tb_items">
        <thead>
            <tr>
                <th style="background-color:transparent">Vendor </th>
                <th style="background-color:transparent">Quotations</th>                
            </tr>
        </thead>
        <tbody>
            @if (definition.Element("vendors").Elements("vendor").Any())
            {
                foreach (var vendor in definition.Element("vendors").Elements("vendor"))
                {
                    <tr>
                        <td>@vendor.Element("name").Value</td>
                        <td><input class="form-control" type="file" name="@string.Format("file_{0}",vendor.Element("id").Value)" /></td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div class="form-group">
    <label>Select Vendor if you wish to skip bid comparison</label>
    @Html.DropDownList("vendor", new SelectList(Util.GetVendors().Where(e=>vendor_ids.Contains(e.id)), "id", "name", null), "- Please Select -", new { @class = "form-control" })
</div>

<div class="form-group">
    <label>Additional Comments</label>
    <textarea class="form-control" name="comment"></textarea>
</div>
          

                







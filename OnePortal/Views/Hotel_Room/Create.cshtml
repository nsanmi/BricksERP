@model Hotel.Dal.Models.Hotel_Room

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Create Room</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Noticeboard","Admin")">Administration</a>
            </li>
            <li>
                <a>HRM</a>
            </li>
            <li>
                <a>Hotel</a>
            </li>
            <li class="active">
                <strong>Create Room</strong>
            </li>
        </ol>
    </div>
    
</div>

<div class="wrapper wrapper-content  animated fadeInRight">
    <div class="row">
        <div class="col-sm-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5> Room</h5>
                    </div>

                    <div class="ibox-content">
                        <div class="row">
                            @if (ViewBag.message != null)
                            {
                                <div class="alert alert-info alert-dismissable">
                                    <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                                    @ViewBag.message
                                </div>
                            }
                        </div>

                        @using (Html.BeginForm("Make", "Hotel_Room", FormMethod.Post, new { enctype = "multipart/form-data"} ))
        {

                        @*@using (Html.BeginForm("Make", "Hotel_Room", FormMethod.Post))
                        {*@
                            @Html.AntiForgeryToken()

                    <div class="form-horizonta row">
                        <h4>Hotel_Room</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.Room_number, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Room_number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Room_number, "", new { @class = "text-danger" })

                        </div>

                      

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.room_typeid, "room_typeid", htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.DropDownList("room_typeid", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.room_typeid, "", new { @class = "text-danger" })

                        </div>



                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.rate, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.rate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.rate, "", new { @class = "text-danger" })

                        </div>

                        

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.room_category, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.room_category, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.room_category, "", new { @class = "text-danger" })

                        </div>



                        <div class="form-group col-lg-6">
                            <img alt="" height="100" width="300" style="border:solid" id="user_img">
                            <input type="file" name="ImageFile" value="" class="form-control" id="RoomImage1" , onchange="DisplayImage(this)" required />

                            @*@Html.TextBoxFor(model => model.RoomImage1, new { @class = "form-control", type = "file", id = "RoomImage1", name = "ImageFile", @onchange = "DisplayImage(this)" })*@
                            @Html.ValidationMessageFor(model => model.RoomImage1, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-lg-6">
                            <img alt="" height="100" width="300" style="border:solid" id="user_img2">
                            <input type="file" name="ImageFile2" value="" class="form-control" id="RoomImage2" , onchange="DisplayImage2(this)" required />

                            @*@Html.TextBoxFor(model => model.RoomImage2, new { @class = "form-control", type = "file", id = "RoomImage2", name = "ImageFile2", @onchange = "DisplayImage2(this)" })*@

                            @Html.ValidationMessageFor(model => model.RoomImage2, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })

                        </div>


                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.Room_Description, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Room_Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Room_Description, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.max_children, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.max_children, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.max_children, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.max_adults, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.max_adults, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.max_adults, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.max_people, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.max_people, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.max_people, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.min_people, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.min_people, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.min_people, "", new { @class = "text-danger" })

                        </div>

                   

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                        }

                        <div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>



                    </div>
                    <div class="ibox-footer">
                        <div class="row">
                            <div class="col-lg-12 ">
                                @*<div class="pull-right">
                                        <button type="submit" class="btn btn-primary">Update Complain</button>
                                    </div>*@
                            </div>
                        </div>
                    </div>
                </div>
       
        </div>
    </div>
</div>


<script type="text/javascript">

    /*function show() */
    function DisplayImage(result){
        if (result.files && result.files[0]) {
      var filerdr = new FileReader();
      filerdr.onload = function (e) {
         $('#user_img').attr('src', e.target.result);
      }
            filerdr.readAsDataURL(result.files[0]);
   }
    }


    function DisplayImage2(result) {
        if (result.files && result.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img2').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(result.files[0]);
        }
    }
</script>
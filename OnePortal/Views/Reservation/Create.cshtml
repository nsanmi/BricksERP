@model Hotel.Dal.Models.Hotel_reservation

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Reserve Room</h2>
        @*<ol class="breadcrumb">
                <li>
                    <a href="@Url.Action("Noticeboard","Admin")">Administration</a>
                </li>
                <li>
                    <a>Admin</a>
                </li>
                <li>
                    <a href="@Url.Action("Index","HotelBooking")">Rooms</a>
                </li>
                <li class="active">
                    <a>Room</a>
                </li>
            </ol>*@
    </div>
</div>
<div class="row">
    <div class="col-lg-12 col-lg-offset-0">
        <div class="wrapper wrapper-content white-bg animated fadeInUp">
            <div class="ibox">
                <div class="ibox-content">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="form-group col-lg-6">
                                <label>Check-In Date</label>
                                <input type="date" name="reservation_checking_date" id="check_in_date" class="form-control" />
                                @Html.ValidationMessageFor(model => model.reservation_checking_date, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group col-lg-6">
                                <label>Check-Out Date</label>
                                <input type="date" name="reservation_checkout_date" id="check_out_date" class="form-control" />
                                @Html.ValidationMessageFor(model => model.reservation_checkout_date, "", new { @class = "text-danger" })
                            </div>

                            @*<div class="form-group col-lg-6">
                                    <label>Choose Room Type</label>

                                    @Html.DropDownList("room_types", null, "Select Room Type", htmlAttributes: new { @class = "form-control", @id = "room_type" })

                                </div>

                                <div class="form-group col-lg-6">
                                    <label for="roompull">Select Room</label>
                                    <select class="form-control" id="roompull" name="Room_type"></select>
                                </div>*@

                            @*<div class="form-group col-lg-6">
                                    <label>Choose Room</label>

                                    @Html.DropDownList("Room_id", null, "Select Room(s)", htmlAttributes: new { @class = "form-control", @id = "roompull" })
                                    @Html.ValidationMessageFor(model => model.Room_id, "", new { @class = "text-danger" })

                                </div>*@

                            @*<div class="form-group col-lg-6">
                                <label>Choose Room</label>
                                <select id="roompull" name="Room_id" required></select>
                                     </div>*@

                            @*<div class="form-group col-lg-6">
                                    <label>Choose Guest</label>
                                    @Html.DropDownList("guest_id", null, "Select Guest", htmlAttributes: new { @class = "form-control", id = "e6" })
                                    @Html.ValidationMessageFor(model => model.guest_id, "", new { @class = "text-danger" })
                                </div>*@
                            @*<div class="form-group col-lg-6">
                                    <label>Guest Type</label>
                                    <select class="form-control" id="guest_type">
                                        <option>Please-select</option>
                                        <option value="0">Existing Guest</option>
                                        <option value="1">New Guest</option>

                                    </select>
                                </div>*@

                            <div class="form-group col-lg-6">
                                <label>Choose Guest</label>
                                <select id="e6" name="guest_id" required></select>
                            </div>

                            <div class="form-group col-lg-6">
                                <label>Reservation Type</label>
                                @Html.DropDownList("reservation_typeId", null, "Select Reservation Type", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.reservation_typeId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                             <table class="table table-bordered" id="tb_items">
                                    <thead>
                                        <tr>
                                            <th style="background-color:transparent">Clothe Type</th>
                                            <th style="background-color:transparent">Quantity</th>
                                            <th style="background-color:transparent" width="15%">Amount</th>
                                            @*<th style="background-color:transparent" width="15%">Value 3</th>*@

                                            @*<th style="background-color:transparent">Specification</th>
                                                <th style="background-color:transparent">Unit Cost</th>*@
                                            <th style="background-color:transparent" width="10%">Total</th>
                                            <th style="background-color:transparent"><button type="button" class="btn btn-sm btn-primary" onclick="add_row('tb_items')">Add Row</button></th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        <tr class="txtMult">
                                            <td class="col-sm-3">
                                                @*<input type="text" name="name" class="form-control" />*@
                                                @Html.DropDownList("room_types", null, "Select Room Type", htmlAttributes: new { @class = "form-control", @id = "room_type" })

                                            </td>
                                            <td>
                                                <select class="form-control" id="roompull" name="Room_type"></select>
                                            </td>
                                            @*<td><input class="form-control number allownumericwithdecimal val2" type="text" required onpaste="return false" name="quantity" value="" /></td>*@
                                            <td><input class="form-control number val3 allownumericwithdecimal" type="text" required onpaste="return false" name="unit_cost" value="" /></td>
                                            <td><span class="multTotal">0.00</span></td>
                                            <td><button class="btn btn-sm btn-danger" type="button" onclick="delete_row(this,'tb_items')"><i class="fa fa-trash"></i></button></td>
                                        </tr>


                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="3">Total</td>
                                            <td id="grandTotal" colspan="2">
                                                0.00
                                            </td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>


                            <div class="form-group col-lg-6">
                                <label>Total</label>
                                @Html.EditorFor(model => model.total, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.total, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-6">
                                <label>Payment Type</label>
                                @Html.DropDownList("paymentTypeId", null, "Select Payment Type", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.paymentTypeId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-lg-6">
                                <label>Reservation Comment</label>
                                <textarea class="form-control" name="reservation_comment"></textarea>

                                @Html.ValidationMessageFor(model => model.reservation_comment, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group col-lg-12">
                                <div class="">
                                    <input type="submit" value="Create" class="btn btn-block" />
                                </div>
                            </div>

                        </div>

                    }

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
@section scripts{

    <script>

        $(document).ready(function () {

            $("#frm_img").submit(function () {

                var formData = new FormData($(this)[0]);


                $.ajax({
                    url: '/api/employeeapi/UploadImg',
                    type: 'POST',
                    data: formData,
                    async: true,
                    success: function (data) {
                        window.location.reload(true);
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });


                return false;
            });



            $('#e6').select2({
                placeholder: 'Search for a user',

                ajax: {
                    url: function (params) {
                        return baseUrl() + "employeeapi/getsearch/" + params.term;
                    },
                    dataType: 'json',
                    quietMillis: 100,

                    processResults: function (data) {
                        return {
                            results: $.map(data, function (obj) {
                                return { id: obj.id, text: obj.name };
                            })
                        };
                    }

                }
            });



            $('#t_about').keypress(function (e) {
                if (e.which == 13) {
                    $('#emp_about').val($('#t_about').val());
                    $('#btn_submit').click();
                }
            });

            $('#t_about').keyup(function () {
                var max = 140;
                var len = $(this).val().length;
                if (len >= max) {
                    $(this).val($(this).val().substr(0, max));

                }
            });


            $('#img').change(function () {
                $('#frm_img').submit();
            });

            $('#data_1 .input-group.date').datepicker({
                format: 'yyyy-mm-dd',
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green'
            });



        });

        $(document).ready(function () {
            $("#hide").click(function () {
                $("guestdemo").hide();
            });
            $("#show").click(function () {
                $("guestdemo").show();
            });
        });

        $(document).ready(function () {

            // $('.form-d', '.form-c').on('input', '.prc', '.pm', function () {

            $(".form-d , .form-c").on('input', ".prc, pm", function () {

                var totalQuan = 0;
                var totalPrice = 0;
                var res = 0;
                var total = 0;


                $('.form-d .prc').each(function () {
                    var inputVal = $(this).val();
                    if ($.isNumeric(inputVal)) {
                        totalQuan += parseFloat(inputVal);

                    }

                });

                $('.form-c .pm').each(function () {
                    var inputVal2 = $(this).val();
                    if ($.isNumeric(inputVal2)) {
                        res = inputVal * inputVal2;
                        total += parseFloat(res);
                        totalPrice += parseFloat(inputVal);

                    }

                });


                $('#qresult').text(totalQuan);
                $('#presult').text(totalPrice);
                $('#tresult').text(total);
            });

        });



        $(document).ready(function () {
            var counter = 0;

            $("#addrow").on("click", function () {
                var newRow = $("<tr>");
                var cols = "";

                //cols += '<td><input type="text" class="form-control" name="name' + counter + '"/></td>';
                cols += ' <select class="form-control col-sm-4" name="name"></select>';
                //cols += '<td class="col-sm-4 form-d">< input type = "number" class="form-control prc" name="quantity' + counter + '" /></td >';

                cols += '<td class="col-sm-4 form-d"><input type="number" class="form-control prc" name="quantity' + counter + '"/></td>';
                cols += '<td class="form-c"><input type="number" class="form-control pm" name="price' + counter + '"/></td>';

                cols += '<td><input type="button" class="ibtnDel btn btn-md btn-danger "  value="Delete"></td>';
                newRow.append(cols);
                $("table.order-list").append(newRow);
                counter++;
            });



            $("table.order-list").on("click", ".ibtnDel", function (event) {
                $(this).closest("tr").remove();
                counter -= 1
            });


        });



        function calculateRow(row) {
            var price = +row.find('input[name^="price"]').val();

        }


        function calculateGrandTotal() {
            var grandTotal = 0;
            $("table.order-list").find('input[name^="price"]').each(function () {
                grandTotal += +$(this).val();
            });
            $("#grandtotal").text(grandTotal.toFixed(2));

        }


    </script>

    <script>

        $(document).ready(function () {
            //this calculates values automatically
            sum();
            $("#num1, #num2").on("keydown keyup", function () {
                sum();
            });
        });

        function sum() {
            var num1 = document.getElementById('num1').value;
            var num2 = document.getElementById('num2').value;
            var result = parseInt(num1) + parseInt(num2);
            var result1 = parseInt(num2) - parseInt(num1);
            if (!isNaN(result)) {
                document.getElementById('sum').value = result;
                document.getElementById('subt').value = result1;
            }
        }
    </script>

    <script src="~/Content/libs/datapicker/bootstrap-datepicker.js"></script>
    <script src="~/Content/libs/iCheck/icheck.min.js"></script>
    <script src="~/Scripts/custom_fns/base.js"></script>
    <script src="~/Scripts/custom_fns/file_manager.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#guest_type').on('change', function () {
                if (this.value == '1')
                //.....................^.......
                {
                    $("#guestdemo").show(1000);
                }

                else {
                    $("#guestdemo").hide(1000);
                }
            });

            $('#guest_type').on('change', function () {
                if (this.value == '0') {
                    $("#guest").show(1000);
                }

                else {
                    $("#guest").hide(1000);
                }
            });

            $('#guest_type').on('change', function () {
                if (this.value == '2') {
                    $("#worker").show(1000);
                }

                else {
                    $("#worker").hide(1000);
                }
            });
        })


        $(document).ready(function () {
            $('#room_type').change(function () {
                debugger;
                var room_type = parseInt($(this).val())
                var check_in_date = $('#check_in_date').val();
                var check_out_date = $('#check_out_date').val();

                console.log('check in' + check_in_date.length);
                console.log('check out' + check_out_date.length);

                if (check_in_date === "" || check_out_date === "") {
                    alert('Please select check-in and check-out dates');
                    return; //this will skip any futher code execusion
                } else {
                    var ck_in = new Date(check_in_date);
                    var ck_out = new Date(check_out_date);
                    if (ck_in > ck_out) {

                        alert("The checkout date selected is greater compared to checkin date please select date in correct order");
                        return;
                    }


                    var formData = { check_out_date, check_in_date, room_type };


                    $.ajax({
                        type: 'POST',
                        url: "/reservation/GetAvailableRooms",
                        data: JSON.stringify(formData),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",

                        success: function (data) {

                            var s = '<option value="-1">Please Select a Room</option>';
                            for (var i = 0; i < data.length; i++) {
                                s += '<option value="' + data[i].Id + '">' + data[i].Room_number + ' ' + data[i].room_type + '</option>';
                            }
                            //$("#roompull").html(s);


                            $('#roompull').append(s);
                            //alert(data);

                            debugger;
                            console.log(data);
                        }
                        //cache: false,

                        // processData: false
                    });
                    //send to api after verifying that the from date is greater than to date
                    //to verify dates use
                    //date1 > date2 where date1 is new Date(datestring);
                    //???
                }

                //if (!check_in_date) {
                //// if (!check_in_date || !check_out_date ) {
                // //if (check_out_date != null) {


                //     //if (!check_out_date)    {

                //         //alert('Please select check-in and check-out dates')
                //         var formData = { check_out_date, check_in_date, room_type }
                //         console.log(formData)
                //         //var formData = new FormData();
                //         //formData.append('check_out_date', check_out_date);
                //         //formData.append('check_in_date', check_in_date);
                //         //formData.append('room_type', room_type);

                //         $.ajax({
                //             type: 'POST',
                //             url: "/reservation/GetAvailableRooms",
                //             data: JSON.stringify(formData),
                //             contentType: "application/json; charset=utf-8",
                //             dataType: "json",
                //             //data: formData,
                //             //async: true,
                //             // dataType: 'json',

                //             success: function (data) {
                //                 //window.location.reload(true);
                //             },
                //             cache: false,
                //             //contentType: false,
                //             processData: false
                //         });

                //     }
                //     else {
                //         alert('hhPlease select check-in and check-out dates')
                //     }

                // }
            });
        })
    </script>



    <script>

        $(document).ready(function () {

            $("#frm_img").submit(function () {

                var formData = new FormData($(this)[0]);


                $.ajax({
                    url: '/api/employeeapi/UploadImg',
                    type: 'POST',
                    data: formData,
                    async: true,
                    success: function (data) {
                        window.location.reload(true);
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });


                return false;
            });


            $('#e6').select2({
                placeholder: 'Search for a user',

                ajax: {
                    url: function (params) {
                        return baseUrl() + "employeeapi/getsearch/" + params.term;
                    },
                    dataType: 'json',
                    quietMillis: 100,

                    processResults: function (data) {
                        return {
                            results: $.map(data, function (obj) {
                                return { id: obj.id, text: obj.name };
                            })
                        };
                    }

                }
            });

            $('#e6').select2({
                placeholder: 'Search for a guest',

                ajax: {
                    url: function (params) {
                        return baseUrl() + "employeeapi/getguest/" + params.term;
                    },
                    dataType: 'json',
                    quietMillis: 100,

                    processResults: function (data) {
                        return {
                            results: $.map(data, function (obj) {
                                return { id: obj.id, text: obj.name };
                            })
                        };
                    }

                }
            });



            $('#t_about').keypress(function (e) {
                if (e.which == 13) {
                    $('#emp_about').val($('#t_about').val());
                    $('#btn_submit').click();
                }
            });

            $('#t_about').keyup(function () {
                var max = 140;
                var len = $(this).val().length;
                if (len >= max) {
                    $(this).val($(this).val().substr(0, max));

                }
            });


            $('#img').change(function () {
                $('#frm_img').submit();
            });

            $('#data_1 .input-group.date').datepicker({
                format: 'yyyy-mm-dd',
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green'
            });



        });


    </script>







    <script src="~/Content/libs/datapicker/bootstrap-datepicker.js"></script>
    <script src="~/Content/libs/iCheck/icheck.min.js"></script>
    <script src="~/Scripts/custom_fns/base.js"></script>
    <script src="~/Scripts/custom_fns/file_manager.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>


    <script src="~/Content/libs/iCheck/icheck.min.js"></script>
    <script src="~/Scripts/custom_fns/base.js"></script>
    <script src="~/Scripts/custom_fns/workflow.js"></script>
    <script src="~/Content/libs/summernote/summernote.min.js"></script>
    <script src="~/Content/libs/datapicker/bootstrap-datepicker.js"></script>
    <script src="~/Content/libs/dataTables/datatables.min.js"></script>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Content/libs/file-input/fileinput.min.js"></script>
    <script src="~/Content/libs/file-input/themes/explorer-fa/theme.js" type="text/javascript"></script>
    <script src="~/Content/libs/file-input/themes/fa/theme.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" type="text/javascript"></script>
    <script src="~/Content/libs/jasny/jasny-bootstrap.min.js"></script>

    <script>
        $(".txtMult input").keyup(multInputs);
        $(".txtMult_n input").keyup(multInputs_n);
        $(".txtMult_r input").keyup(multInputs_r);

        function multInputs() {
            var mult = 0;
            // for each row:
            $("tr.txtMult").each(function () {
                var $val3 = 1;
                // get the values from this row:
                //var $val1 = $('.val1', this).val();
                var $val2 = $('.val2', this).val();
                if ($('.val3', this).length) {
                    $val3 = $('.val3', this).val();
                }
                var $total = 0;
                if ($val2 !== undefined && $val3 !== undefined)
                    $total = ($val2 * 1) * ($val3 * 1);
                // set total for the row
                $('.multTotal', this).text(numberWithCommas($total));
                mult += $total;
            });
            $("#grandTotal").text(numberWithCommas(mult));
            $("#grandTotal2").val(mult);
        }

        $(document).ready(function () {
            $('.summernote').summernote({
            });

            $("#file-0b").fileinput({
                'theme': 'explorer-fa',
                browseClass: "btn btn-primary btn-xs",
                fileType: "any",
                'mainClass': "input-group-lg"
            });

            //Hide the rejection input
            $("#rejection_step").hide();
        });

        $('#data_1 .input-group.date').datepicker({
            format: 'yyyy-mm-dd',
            todayBtn: "linked",
            keyboardNavigation: false,
            forceParse: false,
            calendarWeeks: true,
            autoclose: true
        });

        var dateToday = new Date();
        //var reqDate
        $('#data_2 .input-group.date').datepicker({
            format: 'yyyy-mm-dd',
            todayBtn: "linked",
            keyboardNavigation: false,
            forceParse: false,
            calendarWeeks: true,
            autoclose: true,
            minDate: dateToday,
            daysOfWeekDisabled: [0, 6]
        });

        $(".txtMult_n input").keyup(multInputs_n);

        function multInputs_n() {
            var mult = 0;
            // for each row:
            $("tr.txtMult_n").each(function () {
                var $val3 = 1;
                // get the values from this row:
                //var $val1 = $('.val1', this).val();
                var $val2 = $('.val2', this).val();
                if ($('.val3', this).length) {
                    $val3 = $('.val3', this).val();
                }

                var $total = ($val2 * 1) * ($val3 * 1);
                // set total for the row
                $('.multTotal', this).text(numberWithCommas($total));
                mult += $total;
            });
            $("#grandTotal").text(numberWithCommas(mult));
        }

        function multInputs_r() {
            var mult = 0;
            // for each row:
            $("tr.txtMult_r").each(function () {
                var $val3 = 1;
                // get the values from this row:
                var $val1 = $('.val1', this).val();

                var $total = ($val1 * 1);
                // set total for the row
                $('.multTotal', this).text(numberWithCommas($total));
                mult += $total;
            });
            $("#grandTotal").text(numberWithCommas(mult));

        }

        function numberWithCommas(number) {
            var parts = number.toString().split(".");
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return parts.join(".");
        }

        $(function () {
            $('.number').keypress(function (e) {
                if (e.which === 97 ||
                    e.which === 98 ||
                    e.which === 99 ||
                    e.which === 110 ||
                    e.which === 111 ||
                    e.which === 65 ||
                    e.which === 66 ||
                    e.which === 67 ||
                    e.which === 78 ||
                    e.which === 79 ||
                    e.which === 49 ||
                    e.which === 50 ||
                    e.which === 51 ||
                    e.which === 52 ||
                    e.which === 53 ||
                    e.which === 48 ||
                    e.which === 54 ||
                    e.which === 55 ||
                    e.which === 56 ||
                    e.which === 57) {
                    return true;
                } else {
                    return false;
                }
            });
        });






        $(".allownumericwithdecimal").on("keypress keyup blur",
            function (event) {
                //this.value = this.value.replace(/[^0-9\.]/g,'');
                $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
                if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                    event.preventDefault();
                }
            });

        $(".allownumericwithoutdecimal").on("keypress keyup blur",
            function (event) {
                $(this).val($(this).val().replace(/[^\d].+/, ""));
                if ((event.which < 48 || event.which > 57)) {
                    event.preventDefault();
                }
            });

        function checkForm() {
            var form = $('#process_form');
            form.validate();
            if (form.valid()) {
                $("#btn_submit").hide();
            }


        }

        function toggleRejection(control) {
            if (control.value === "rejected")
                $("#rejection_step").show(350);
            else
                $("#rejection_step").hide(350);
        }

    </script>





}



@section styles{
    <link href="~/Content/libs/datapicker/datepicker3.css" rel="stylesheet">
    <link href="~/Content/libs/iCheck/custom.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet" />

    <style>
        .select2-close-mask {
            z-index: 2099;
        }

        .select2-dropdown {
            z-index: 3051;
        }

        .select2 {
            width: 100% !important;
        }
    </style>


}

@using HRM.DAL.Util;
@using PagedList;
@using System.Data;
@using HRM.DAL.Models;
@using PagedList;
@using OnePortal.Models.ViewModels;

@using PagedList.Mvc;

@*@model IPagedList<OnePortal.Models.ViewModels.TimeSheetO>*@



@{
    ViewBag.Title = "HR";
    var table = (DataTable)ViewBag.table;

    var month = (int)ViewBag.month;
    var year = (int)ViewBag.year;
    var projects = (List<TimesheetProjectNames>)ViewBag.TimsheetProjects;
    var timesheets = (List<TimeSheetO>)ViewBag.TimeSheetO;
    Dictionary<int, double> theCounts = new Dictionary<int, double>();
}



<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Timesheets record</h2>

        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Noticeboard","Admin")">Administration</a>
            </li>
            <li>
                <a>HRM</a>
            </li>
            <li class="active">
                <a>Timesheet</a>
            </li>
        </ol>


    </div>
</div>

    <div class="row">
        <div class="col-lg-12">
            <div class="wrapper wrapper-content animated fadeInUp">
                <div class="ibox">
                    <div class="ibox-title">
                        <h5>Timesheet</h5>
                        <div class="ibox-tools">
                            <form action="@Url.Action("Index","Timesheet")" method="get" id="frm">


                                @Html.DropDownList("month", new SelectList(OptionUtil.GetMonths(), "Value", "Name", month), "- Select Month -", new { @class = "", @onchange = "$('#frm').submit()" })

                                <select name="year" id="year" onchange="$('#frm').submit()">
                                    @for (var i = 2017; i <= DateTime.Now.Year; i++)
                                    {
                                        if (i == year)
                                        {
                                            <option selected value="@i">@i</option>
                                        }
                                        else
                                        {
                                            <option value="@i">@i</option>
                                        }

                                    }

                                </select>
                                <input type="hidden" name="search" id="search" />
                                @*<button type="submit" class="btn-circle btn btn-default" id="btn_refresh"><i class="fa fa-refresh"></i></button>*@

                            </form>

                        </div>

                    </div>
                    <div class="ibox-content">
                        <div class="row">
                            @if (ViewBag.message != null)
                            {
                                <div class="alert alert-info alert-dismissable">
                                    <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                                    @ViewBag.message
                                </div>
                            }
                        </div>
                        @*<div class="row m-b-sm m-t-sm">
                                <div class="col-md-1">
                                    <button type="button" id="loading-example-btn" class="btn btn-white btn-sm"><i class="fa fa-refresh"></i> Refresh</button>
                                </div>
                                <form action="@Url.Action("Index","TimeSheet")" method="get">
                                    <div class="col-md-11">
                                        <div class="input-group">
                                            <input type="text" placeholder="Search by Type and Priority" name="search" value="@ViewBag.search" class="input-sm form-control">
                                            <span class="input-group-btn">
                                                <button type="submit" class="btn btn-sm btn-primary"> Go!</button>
                                            </span>
                                        </div>
                                    </div>
                                </form>
                            </div>*@
                        <div class="">
                            <div class="table-responsive">
                                @*<table class="table table-striped table-bordered" style="border-top:4px solid #000" >
                                    <tbody>
                                        <tr>
                                            <td></td>
                                            <td colspan="@projects.Count()" align="center">Number of Hours Per Project</td>
                                            <td></td>
                                        </tr>
                                    </tbody>
                                </table>*@
                                <table class="table table-striped table-bordered" style="border-top:4px solid #000" id="table">                                    
                                    <thead>                                                                              
                                        <tr>
                                            <th style="font-weight:bold">Employee Name</th>
                                            <th style="font-weight:bold">Designation</th>
                                            @foreach (var _p in projects.OrderBy(m => m.ProjectId))
                                            {
                                                <th style="font-weight:bold">@_p.ProjectName</th>
                                            }
                                            <th style="font-weight:bold">Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    @*<tr>
                                            <td style="font-weight:bold">Employee Name</td>
                                            @foreach (var _p in projects.OrderBy(m => m.ProjectId))
                                            {
                                                <td style="font-weight:bold">@_p.ProjectName</td>
                                            }
                                            <td style="font-weight:bold">Total</td>
                                        </tr>*@
                                    @foreach (var timesheet in timesheets)
                                    {
                                        <tr>
                                            <td>@timesheet.EmployeeName</td>
                                            <td>@timesheet.Designation</td>
                                            @foreach (var _p in projects.OrderBy(m => m.ProjectId))
                                            {
                                                var _t = timesheet.Projects.Select(m => m.ProjectId).ToList().Contains(_p.ProjectId);
                                                if (_t)
                                                {
                                                    foreach (var emp_pro in timesheet.Projects.OrderBy(m => m.ProjectId))
                                                    {
                                                        if (_p.ProjectId == emp_pro.ProjectId)
                                                        {
                                                            <td>@(Math.Round((double)emp_pro.Duration * 100 / (double)timesheet.Projects.Sum(m => m.Duration)), 2)%</td>
                                                            if (theCounts.ContainsKey(_p.ProjectId))
                                                            {
                                                                //we have data, pull and change
                                                                theCounts[_p.ProjectId] = theCounts[_p.ProjectId] + Math.Round((double) emp_pro.Duration * 100 / (double) timesheet.Projects.Sum(m => m.Duration));
                                                            }
                                                            else
                                                            {
                                                                //we put put a new data
                                                                theCounts.Add(_p.ProjectId, Math.Round((double)emp_pro.Duration * 100 / (double)timesheet.Projects.Sum(m => m.Duration)));
                                                            }
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    <td>_</td>
                                                }
                                            }
                                            <td>100%</td>
                                        </tr>

                                    }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="2">Totals</td>
                                            @foreach (var _p in projects.OrderBy(m => m.ProjectId))
                                            {
                                                <td>
                                                    @theCounts[_p.ProjectId]
                                                </td>
                                            }
                                            <td>@(Math.Round(100 * (double)timesheets.Count)) %</td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                            @*<div id='Paging' style="text-align: center">
                                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
                                    of @Model.PageCount
                                    @Html.PagedListPager(Model, page => Url.Action("index", new { page }))
                                </div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>





    @section scripts{
        <script src="~/Content/libs/datapicker/bootstrap-datepicker.js"></script>
        <script src="~/Content/libs/dataTables/datatables.min.js"></script>
        <script src="~/Scripts/custom_fns/base.js"></script>
        <script src="~/Scripts/custom_fns/fn_leave.js"></script>
        <script>

            $(document).ready(function () {
                $('#table').DataTable({
                    dom: '<"html5buttons"B>lTfgitp',
                    "pageLength": 50,
                    buttons: [
                        { extend: 'copy' },
                        { extend: 'csv' },
                        { extend: 'excel', title: 'employee_list' },
                        { extend: 'pdf', title: 'employee_list' },

                        {
                            extend: 'print',
                            customize: function (win) {
                                $(win.document.body).addClass('white-bg');
                                $(win.document.body).css('font-size', '10px');

                                $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                            }
                        }
                    ]

                });

            });


            $(document).ready(function () {

                $('#data_1 .input-group.date').datepicker({
                    format: 'yyyy-mm-dd',
                    todayBtn: "linked",
                    keyboardNavigation: false,
                    forceParse: false,
                    calendarWeeks: true,
                    autoclose: true,
                    daysOfWeekDisabled: [0, 6]
                });

            });


        </script>
    }





    @section Styles{
        <link href="~/Content/libs/dataTables/datatables.min.css" rel="stylesheet">
        <link href="~/Content/libs/datapicker/datepicker3.css" rel="stylesheet">
    }



    @*@section Styles{
            <style>

                .table td.text {
                    max-width: 177px;
                }

                    .table td.text span {
                        white-space: nowrap;
                        overflow: hidden;
                        text-overflow: ellipsis;
                        display: inline-block;
                    }

                .table td {
                    white-space: nowrap;
                    overflow: hidden;
                    text-overflow: ellipsis;
                }

                th {
                    font-weight: bold;
                    font-size: 1em;
                }

                table {
                    border: 1px;
                    table-layout: fixed;
                }

                .table > tbody > tr > td, .table > thead > tr > th {
                    padding: 6px 10px;
                }

                .table-striped > tbody > tr:nth-of-type(odd) {
                }

                .table-row {
                    cursor: pointer;
                }
            </style>

            <link href="~/Content/libs/datapicker/datepicker3.css" rel="stylesheet">
            <link href="~/Content/libs/dataTables/datatables.min.css" rel="stylesheet">
        }*@


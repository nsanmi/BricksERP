@using WorkFlow.DAL.Data
@using System.Xml.Linq;
@using WorkFlow.DAL;
@{
    var workflow = (bpm_workflow)ViewBag.workflow;
    var definition = workflow.workflow;
    var form = XElement.Parse(workflow.workflow).Element("form");
    var doc = XElement.Parse(workflow.workflow);

    double total = 0;


}
<div class="form-group">
    <div class="input-group">
        <input type="text" placeholder="approval token" class="input form-control" name="approval_token">
        <span class="input-group-btn">
            <button type="button" class="btn btn btn-primary" onclick="generate_approval_token()"> <i class="fa fa-refresh"></i> Refresh</button>
        </span>
    </div>
    </div>
    <div class="form-group">


        <table class="table table-bordered" id="tb_items">
            <thead>
                <tr>

                    <th style="background-color:transparent">Unit</th>
                    <th style="background-color:transparent">Quantity</th>
                    <th style="background-color:transparent">Item</th>
                    <th style="background-color:transparent">Description</th>
                    <th style="background-color:transparent">Unit Cost</th>
                    <th style="background-color:transparent">Total Cost</th>
                </tr>
            </thead>
            <tbody>
                @if (form.Element("items").Elements("item").Any())
                {
                    foreach (var item in form.Element("items").Elements("item"))
                    {
                        var tc = Convert.ToDouble(item.Element("vendors_unit_price") != null ? item.Element("vendors_unit_price").Value : item.Element("unit_price").Value) * Convert.ToDouble(item.Element("unit").Value) * Convert.ToDouble(item.Element("quantity").Value);
                        total += tc;
                        <tr>
                            <td>@item.Element("unit").Value</td>
                            <td>@item.Element("quantity").Value</td>
                            <td>@item.Element("itemname").Value</td>
                            <td>@item.Element("description").Value</td>
                            <td>@string.Format("{0:N}", item.Element("vendors_unit_price") != null ? item.Element("vendors_unit_price").Value : item.Element("unit_price").Value))</td>
                            <td>@string.Format("{0:N}", tc)</td>

                        </tr>
                    }
                }
                <tr>
                    <td colspan="5" style="text-align:right">
                        <strong>Total</strong>
                    </td>
                    <td>
                        @string.Format("{0:N}", total)
                    </td>
                </tr>

            </tbody>
        </table>
    </div>

    <div class="form-group">
        <label>Account Name</label>
        <input class="form-control" name="account_name" type="text" value="@form.Element("account_name").Value" readonly />
    </div>

    <div class="form-group">
        <label>Account Number</label>
        <input class="form-control" name="account_number" value="@form.Element("account_number").Value" readonly type="text" />
    </div>

    <div class="form-group">
        <label>Bank Name</label>
        <input class="form-control" name="bank_name" type="text" value="@form.Element("bank_name").Value" readonly />
    </div>

    <div class="form-group">
        <label>Term of Payment</label>
        <textarea class="form-control" readonly name="term_of_payment">@form.Element("term_of_payment").Value</textarea>
    </div>

    <div class="form-group">
        <label>Select Action</label>
        <select name="approval" class="form-control">
            <option value="approved">Approve</option>
            <option value="rejected">Reject</option>
            <option value="dismissed">Dismiss</option>
        </select>
    </div>

    <div class="form-group">
        <label>Select a step to return to <span style="color:red">ONLY USE THIS OPTION IF YOUR ARE REJECTING A TRANSACTION</span></label>
        <input type="number" max="@doc.Element("next_step").Value" min="1" name="fall_back" value="1" />
    </div>

    <div class="form-group">
        <label>Additional Comments</label>
        <textarea class="form-control" name="comment"></textarea>
    </div>









